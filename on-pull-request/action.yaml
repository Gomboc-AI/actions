name: 'Gomboc.AI On Pull Request Action'

description: 'Secure your IaC with Gomboc.AI'

inputs:
  GOMBOC_SERVER_URL: 
    description: 'Internal use only'
    required: false
  GOMBOC_CLIENT_URL: 
    description: 'Internal use only'
    required: false
  GOMBOC_DEBUG:
    description: 'Internal use only'
    required: false
  effect:
    description: "'submit-for-review' will fail the job and create an additional PR with the remediations we have found for your submitted PR. 'audit' will allow the PR to pass the job even if there are findings available, however it will list any observations we can make."
    required: false
    default: 'submit-for-review'
    enum:
      - 'submit-for-review'
      - 'audit'
  iac:
    description: "A space separated list with the IaC you want us to check"
    required: true
    type: array
    items:
      type: string
      enum:
        - 'cloudformation'
        - 'terraform'
  cli-version:
    description: "The specific CLI version you would like us to use"
    required: false
    default: '1.0.8'
    type: string

runs:
  using: "composite"
  steps:
    - name: It was triggered by Gomboc
      id: its-gomboc
      run: |
        its_gomboc_prod=${{ github.actor == 'gomboc-ai[bot]' }}
        its_gomboc_beta=${{ github.actor == 'gomboc-ai-beta[bot]' }}
        its_gomboc_local=${{ github.actor == 'gomboc-local-development[bot]' }}
        if [[ $its_gomboc_prod == true || $its_gomboc_beta == true || $its_gomboc_local == true ]]; then
          echo "its_gomboc=true" >> $GITHUB_OUTPUT
        else
          echo "its_gomboc=false" >> $GITHUB_OUTPUT
        fi
      shell: bash
      
    - uses: actions/checkout@v3
      if: steps.its-gomboc.outputs.its_gomboc == 'false'
      with:
        fetch-depth: 0

    - uses: actions/setup-node@v3
      if: steps.its-gomboc.outputs.its_gomboc == 'false'
      with:
        node-version: 18.17.0

    - name: Get OIDC token 
      id: get-oidc-token
      if: steps.its-gomboc.outputs.its_gomboc == 'false'
      run: |
        echo "ID_TOKEN=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | python -c "import sys, json; print(json.load(sys.stdin)['value'])")" >> $GITHUB_OUTPUT
      shell: bash

    - name: Handle on_pull_request event
      if: github.event_name == 'pull_request' && steps.its-gomboc.outputs.its_gomboc == 'false'
      env:
        FORCE_COLOR: 3
      run: |
        after=${{ github.event.pull_request.base.sha }}
        before=${{ github.sha }}
        target_directories=$(for i in $(git diff --name-only --diff-filter=ACMRT "$after" "$before") ; do dirname $i ; done | sort -u | xargs)
        if [ -z "$target_directories" ]; then
          echo -e "\033[0;31mNo changes detected\033[0m"
          exit 0
        fi
        docker run --rm \
          -e GOMBOC_DEBUG=${{inputs.GOMBOC_DEBUG}} \
          -e GOMBOC_SERVER_URL=${{inputs.GOMBOC_SERVER_URL}} \
          -e GOMBOC_CLIENT_URL=${{inputs.GOMBOC_CLIENT_URL}} \
          gombocai/cli:${{ inputs.cli-version }} \
          sh -c "gomboc ${{inputs.effect}} on-pull-request --auth-token ${{ steps.get-oidc-token.outputs.ID_TOKEN }} --target-directories $target_directories --pull-request ${{ github.event.pull_request.number }} --iac ${{ inputs.iac }}" 
      shell: bash


    - name: Handle unsupported event types
      if: github.event_name != 'pull_request' && steps.its-gomboc.outputs.its_gomboc == 'false'
      env:
        FORCE_COLOR: 3
      run: |
        echo -e "\033[0;31mUnsupported event type: ${{ github.event_name }}. Try on:pull_request\033[0m"
        exit 0
      shell: bash

    - name: Skip
      if: steps.its-gomboc.outputs.its_gomboc == 'true'
      env:
        FORCE_COLOR: 3
      run: |
        echo -e "\033[0;31mSkipping workflow because it was triggered by Gomboc\033[0m"
        exit 0
      shell: bash
